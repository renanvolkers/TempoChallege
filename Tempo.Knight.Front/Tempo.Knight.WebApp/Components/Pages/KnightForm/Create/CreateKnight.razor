@page "/create-knight"
@using Tempo.Knight.Dto.Dtos.Weapon
@inject HttpClient Http

<link href="CreateKnight.css" rel="stylesheet">

<div class="knight-form verticalScroll">
    <EditForm Model="createKnightViewModel" OnValidSubmit="SubmitForm">
        <h1>Adicionar Cavaleiro</h1>

        <div class="form-group">
            <label for="name">Nome:</label>
            <InputText id="name" @bind-Value="createKnightViewModel.knightViewModel.Name" class="form-control" required />
        </div>
        <div class="form-group">
            <label for="nickname">Apelido:</label>
            <InputText id="nickname" @bind-Value="createKnightViewModel.knightViewModel.Nickname" class="form-control" required />
        </div>
        <div class="form-group">
            <label for="birthday">Data de Nascimento:</label>
            <InputDate id="birthday" @bind-Value="createKnightViewModel.knightViewModel.Birthday" class="form-control" required />
        </div>
        <div class="form-group">
            <div class="dropList">
                <label for="keyAttribute">Atributo Principal:</label>
                <InputSelect id="keyAttribute" @bind-Value="createKnightViewModel.knightViewModel.KeyAttribute" class="form-control" required>
                    @foreach (var attribute in createKnightViewModel.tributes)
                    {
                        <option value=@(attribute.Name)>@(attribute.Name)</option>
                    }
                </InputSelect>
            </div>
            <div>
                <InputNumber class="input-left form-control" @bind-Value="attrKeyValue" placeholder="g" required />
            </div>
        </div>
        <div class="form-group ">
            <label for="attributes">Atributos:</label>
            <div class="attributes-grid">
                <div class="cards-container horizontalScroll">
                    @foreach (var tribute in createKnightViewModel.tributes)
                    {
                        <div @onclick="() => createKnightViewModel.ToggleCardSelection(tribute)" class="tribute-card @((tribute.Selected ? "card-selected" : ""))">
                            <img src="assets/@(tribute.Name).png"alt="@tribute.Name" class="@((tribute.Selected ? "selected" : ""))">
                            <div class="card-content">
                                <h4>@tribute.Name</h4>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="form-group">
            <label>Arma:</label>
            <div>
                <InputText @bind-Value="createKnightViewModel.WeaponSingle.Name" placeholder="Nome da Arma" class="form-control" required />
            </div>
            <div>
                <InputNumber @bind-Value="createKnightViewModel.WeaponSingle.Mod" placeholder="Modificador" class="input-left form-control" required />
            </div>
            <div class="containerBotton">
                <button type="button" class="bottom-right btn btn-primary" @onclick="createKnightViewModel.AddWeapon">Adicionar Arma</button>
            </div>
        </div>
        <div class="cards-container">
            <div class="form-group">
                <label for="attributes">Armas:</label>
                <div class="attributes-grid">
                    <div class="cards-container">
                        @foreach (var weapon in createKnightViewModel.knightViewModel.Weapons)
                        {
                            <div class="tribute-card">
                                <div class="card-content">
                                    <label>Mod: @weapon.Mod</label>
                                    <label>Name: @weapon.Name</label>
                                    <label>Attrib: @weapon.Attr</label>
                                    <button type="button" @onclick="() => createKnightViewModel.RemoveWeapon(weapon)" class="btn btn-danger">Remover</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="containerBotton">
            <div class="bottom-right"></div>
            <button type="submit" class="bottom-left btn btn-primary">Pronto</button>
        </div>
    </EditForm>
</div>

@code {
    private CreateKnightViewModel createKnightViewModel = new();

    private int attrKeyValue;

    private async Task SubmitForm()
    {
        createKnightViewModel.knightViewModel.Attributes.Add( new AttributeViewModel() { Name=createKnightViewModel.knightViewModel.KeyAttribute,Value= attrKeyValue  });

        try
        {
            var response = await Http.PostAsJsonAsync("/knights", createKnightViewModel.knightViewModel);
            response.EnsureSuccessStatusCode();

            // Handle successful response
            ResetForm();
        }
        catch (HttpRequestException ex)
        {
            // Handle error
            Console.Error.WriteLine($"Request error: {ex.Message}");
        }
    }


    private void ResetForm()
    {
        createKnightViewModel = new CreateKnightViewModel();
        createKnightViewModel.WeaponSingle = new Dto.Dtos.Weapon.WeaponViewModel();
        attrKeyValue = 0;
        foreach (var tribute in createKnightViewModel.tributes)
        {
            tribute.Selected = false;
        }
    }


}
